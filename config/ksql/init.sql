create stream flow_stream(RouterAddr VARCHAR, SrcPort VARCHAR, DstPort VARCHAR, NextHop VARCHAR,SrcIP VARCHAR, DstIP VARCHAR, Proto INT,TimeRecvd BIGINT) with  (KAFKA_TOPIC='flows', VALUE_FORMAT='JSON');
create stream session_stream(businessId VARCHAR,memberId VARCHAR,departmentId VARCHAR,nasId VARCHAR,mac VARCHAR,creationDate BIGINT,download BIGINT,upload BIGINT,sessionTime BIGINT,accStatusType INT,groupIdentityId VARCHAR,sessionId VARCHAR,nasIp VARCHAR, framedIpAddress VARCHAR, username VARCHAR) with  (KAFKA_TOPIC='sessionTopic', VALUE_FORMAT='JSON');
create stream dns_stream(nasIp VARCHAR, memberIp VARCHAR, domain VARCHAR,receivedAt BIGINT) with  (KAFKA_TOPIC='dns', VALUE_FORMAT='JSON');

create stream flow_report_stream as select s.businessId as "businessId", s.departmentId as "departmentId", s.memberId as "memberId", s.nasIp as "nasIp", s.username as "username", f.RouterAddr as "routerAddr", f.SrcIP as "srcIp", f.DstIP as "dstIp", f.SrcPort as "srcPort", f.DstPort as "dstPort", f.TimeRecvd as "timeRecvd", f.Proto as "proto", f.NextHop as "nextHop" from flow_stream f INNER JOIN session_stream s WITHIN 5 MINUTES ON f.RouterAddr=s.nasIp WHERE s.framedIpAddress=f.DstIP OR s.framedIpAddress=f.SrcIP OR s.framedIpAddress=f.NextHop;
create stream dns_report_stream as select session.businessId as "businessId",session.departmentId as "departmentId" , session.memberId as "memberId" , session.nasIp as "nasIp" ,dns.memberIp as "memberIp"  ,dns.receivedAt as "receivedAt"  , dns.domain as "domain",session.username as "username"  from dns_stream dns INNER JOIN session_stream session WITHIN 5 MINUTES ON session.framedIpAddress=dns.memberIp;
